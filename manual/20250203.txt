text-shadow 속성 :
    글자에 그림자를 주는 속성 / x좌표, y좌표, (흐림), 색
    흐림의 경우 optional로, 어느 정도로 흐리게 표현할 지를 결정한다.

    (textshadow.html, textshadow.css 참조)

    Chrome 기준준
    -> Ctrl + Shift + I : 개발자도구 들어가기 (맥은 커맨드+옵션+I)

    거기서 Ctrl+Shift+C 눌러서 특정 요소 선택하고, CSS 변경 가능

문단과 목록 관련
    : 한정된 공간에 텍스트를 여러 줄로 나누는 문단,
    목록 스타일 관련 CSS 학습 -> 그동안 HTML 태그로 해왔지만, CSS로 표현하는 단계

    1. 정렬 / 간격 :
        텍스트를 좌우 혹은 가운데로 정렬하거나 자간, 줄 높이, 들여쓰기 등 지정 가능

        1) text-align 속성 :
            left - 왼쪽 정렬
            right - 오른쪽 정렬
            center - 가운데 정렬
            justify - 양쪽 정렬
        2) line-height 속성 :
            줄 높이 조정 -> 일반적으로는 글자 크기의 1.5배 (1.5em)의 줄 높이를 많이 사용한다.
                클 수록 행간이 넓어지고, 적을수록 행간이 줄어든다.
        3) letter-spacing / word-spacing 속성 :
            letter-spacing : 자간 / px, em 단위로 글자 간격을 임의로 조절한다.
            word-spacing : 단어 간의 간격 / 공백(스페이스바)의 간격을 임의로 조절.
    
    (textalign.html, textalign.css 참조)

        4) text-indent 속성 :
            각 문단 들여쓰기, 내어쓰기 할 때 쓰는 속성.
            양수시 em단위로 들여쓰기가 지정, 음수시 em단위로 내어쓰기가 지정됨.

    목록 스타일
        HTML 파트에서 ul태그와 ol태그, li태그에서 CSS를 통해서 꾸밀 수 있다고 수업했다.
        default 값들이 li에 정해져있는데, 그 부분을 바꾸는 방식에 대해 알아본다.
        (liststyle.html, liststyle.css 참조)

Chapter07 - 인라인과 블록 및 박스 모델 관련 수업

    1. 인라인 요소 / 블록 요소 :
        CSS에서 가장 중요한 부분에 해당한다. 
        -> 웹 페이지의 공간을 구성하는 기본 방식에 해당한다. 잘 알아두어야 추후에 만들 때 수월하다.

        1) 기본 너비와 개념 :
            HTML의 경우 기능이 포함된 태그들이 많으나, span태그와 div태그의 경우에는 기능이 있는 것이 아니라,
            구획을 나눠주는 역할을 한다.

            해당 태그들의 차이는 블록 요소인지 혹은 인라인 요소인지에 대한 차이다.

            (n1inlineblock01.html, css 참조)

            inline vs block

            inline : 글자가 차지하는 만큼 너비를 차지함.
            block : 한 줄을 기준으로 전체를 채우는 역할을 한다.

        n0example.html, n0example.css 참조 (inline, block, inline-block의 차이점을 잘 알아야 한다.)

        display: inline-block -> 기본적으로 인라인 요소의 속성을 가지면서 너비와 높이 조절이 가능하다.

        2) 너비와 높이 조절 :
            width 속성과 height 속성 -> 코드 확인하기

            inline / block / inline-block의 성격상의 차이이다.
            inline : span 태그와 같이 글자가 차지하는 범위만큼의 구역
            block: 글자가 있는 브라우저 상의 가로줄 - 너비/높이 조절 가능
            inline-block: 기본적으로는 글자가 차지하는 범위만큼의 구역이지만 너비 / 높이 조절이 가능하다.

        3) 가로 공간 :
            width를 지정하지 않을 경우 인라인 요소는 컨텐츠 너비만큼만, 블록 요소는 전체 공간을 차지한다는 것을 확인한다.

            가로 공간을 전체 차지하는 블록 요소를 inline-block으로 지정했을 때의 예시.

        4) 여백 적용하기 :
            margin: 컨텐츠 요소의 바깥쪽 여백 지정
            padding: 컨텐츠 요소의 안쪽 여백 지정

            (n2inlineblock02.html, css 참조)

            애국가 작성 후 확인할 점 - p태그의 경우 block 요소이다.
            그렇기 때문에 화면상 오른쪽 빈 공간이 너무 많다.
            오른쪽의 빈 공간 없이 가사가 잘 구분이 될 수 있도록 작성하려면?
            -> inline-block??

    2. 박스 모델 :
        1) 요소의 크기 :
            width / height 속성을 통해 block / inline-block의 경우 크기를 조절할 수 있다.
            -> 고정값 크기의 경우 px 사용.
            -> 하지만, 웹사이트는 브라우저나 디바이스에 따라 화면의 크기가 유동적으로 변한다.
            따라서, 어떤 요소의 크기를 고정해버리면(절댓값을 사용하는 경우), 가독성이 떨어지는 문제가 발생한다.
            -> 이상의 문제를 해결하기 위해 상대값으로 %를 사용하게 되면 해당 요소는 부모 크기에 비례한 길이가 된다.

            ex) width 속성을 100%로 줬다면 부모에 맞는 크기가 되기 때문에 창의 크기를 어떻게 조절하더라도 너비가 꽉 찬 상태를 유지하게 된다.
            (n3example.html, n3example.css 참조)

            그 결과, 디바이스에 따라서 유동적으로 크기를 조저할 때 유용한 기능이 필요하다.
                -> 뷰포트(viewport) : 간단히 말하자면 브라우저의 크기
                vw (viewport width) / vh (viewport height)
                뷰포트 기준 너비 / 높이
                라는 단위가 존재한다. -> 1/100로 나눠놨다.

                vmax(viewport max) / vmin (viewport min)
                상대적으로 길이가 긴 쪽 / 상대적으로 길이가 짧은 쪽
                (똑같이 1/100로 나뉘어있다.)
                컴퓨터 모니터의 경우 일반적으로 가로 길이가 세로 길이보다 길지만,
                모바일의 경우 세로 길이가 가로 길이보다 길다.
                위 둘의 경우에는 예시와 같이 유동적으로 창의 크기가 변하는 경우 사용된다.

                calc() 함수 - 매개변수를 이용해서 CSS에서 특정한 수치를 계산하는 함수.
                    ex) width에 calc(100%+100px)을 넣는다면,
                    상대값 100%의 수치에 100px 더 많도록 나타내는 방식.

                    마찬가지로 vw, vh도 적용이 가능하다.
                    padding이 적용되어 있을 때 사용하는데,
                    ex) 요소 안쪽 24px의 padding이 잡혀있다면, 원하는 상대값에서 24px을 두번 뺀
                    calc(100%-48px)로 넣ㅇ어야 원하는 길이가 측정 가능하다.

        2) 바깥쪽 여백 vs 안쪽 여백 :
            여백의 개념이 박스 모델링에 잇어서 필수적인 부분에 해당한다.

            2-1) margin 속성 :
                마진 지정 방식
                    (1) margin 값을 하나로 지정하는 방법 :
                        기본적으로 여백은 모든 부분에 공통적으로 적용된다.
                        ex) margin: 24px로 지정할 경우 컨텐츠 상하좌우 모든 방향에 24px의 margin 여백이 적용된다.
                            em 지정의 경우에도 동일하다. 0의 경우에는 단위 지정이 필요 없다.
                    (2) margin 값을 두개로 지정하는 방법 :
                        첫 번째 값 : 컨텐츠 세로 영역
                        두 번째 값 : 컨텐츠 가로 영역
            
            (20250204 작성)
            2-2) padding 속성 :
                컨텐츠의 안쪽 여백을 지정하는 방법 -> margin과 동일함.
                    (1) padding 값을 하나로 지정하는 경우. 상하좌우
                    (2) padding 값을 두 개로 지정하는 경우. 상하 / 좌우
                    (3) padding 값을 네 개로 지정하는 경우. 위쪽부터 시계방향
                    (4) padding 값을 세 개로 지정하는 경우. 위 / 좌우 / 아래
                
                    .div1 / .div2로 나누었을 때 확인해야 할 점
                    (1) class selector 클래스 선택자를 다시 사용했다.
                    (2) .div1에 margin: 24px, .div2에 margin: 24px을 먹이면,
                    두 마진의 합인 48px이 마진으로 나타나지 않는다.
                    -> 블록 요소의 위 아래 마진은 전후 블록 요소의 것과 상쇄된다.
                    특정 요소가 더 긴 마진 값을 가지고 잇다면 더 긴 마진을 기준으로 생성된다.
