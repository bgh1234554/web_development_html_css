CSS 시작

HTML 요소만으로 웹페이지를 생성할 수 있지만, 기본 형태만 갖추어진 상태.
시각적인 요소, 디자인 적인 요소를 가지고 웹페이지를 꾸며주는 실질적인 역할을 담당하는 것이 CSS.

CSS를 적용하는 세 가지 방식.

# 1. 인라인 스타일 (inline style)
    : HTML 문서의 태그가 있는 라인마다 style 속성으로 CSS 코드를 일일이 넣어주는 방식.
    여러 요소에 공통 속성을 부여할 수 없다는 단점이 있다.
    HTML과 CSS 코드가 분리되지 않기 때문에 제한적으로 사용한다.

# 2. 내부 스타일 시트 (internal style sheet)
    : HTML의 <head> 태그 내에 <style> 태그를 집어넣고, 그 안에 CSS 코드를 작성하는 방식.
    인라인 스타일의 단점을 보완하여 공통 속성을 부여할 CSS를 일괄적으로 정리할 수 있다.
    style이 너무 길어지게 될 경우에는 <head> 태그가 너무 길어져서 전체 HTML 문서의 양이 증가하기 때문에 style이 적은 경우에만 사용.

# 3. 링킹 스타일 시트 (linking style sheet)
    : HTML 문서 파일과 CSS 파일을 각각 분리해서 작성한 후에 서로 연결(link)해서 사용.
    HTML과 CSS 코드를 분리할 수 있고,
    "한번 작성한 CSS 코드를 여러 HTML 파일에서 공통으로 사용 가능" 하기 때문에 가장 널리 사용된다.

cssstyle.html, cssstyle.css 참조

특히 #3의 경우 서로 분리된 두 파일을 연결하려면 <head> 태그 내에 <link> 태그를 넣어서 생성할 필요가 있다.
해당 경우 rel="stylesheet"는 자동완성되는 편이고, href=""내에 CSS 파일 경로를 작성해서 넣어주면 된다.

선택자 (selector.html, selector.css 참조)
    : CSS로 HTML 문서의 어떤 요소를 꾸미려고 할 때 꾸밀 대상을 올바르게 지정하기 위한 방식.
    'CSS가 특정 요소를 선택하여 스타일을 적용'하게 하는 중요한 역할
    1. 기본 선택자 : 위에 있는 설명이 기본 선택자.
    2. 태그 선택자 : HTML 문서에서 작성했던 p,span,h1,em,a등의 각가 태그를 지정하여 스타일을 지정하는 방식.
    3. 클래스 선택자 : 태그 내에 class를 명시하는 경우가 있는데, id와 비슷해보이기는 하지만,
    클래스 선택자는 페이지의 여러 곳에 중복으로 사용할 수 있으나, id는 그럴 수 없다.
    클래스 명을 복수로 지정하고 싶으면 스페이스 바로 구분지어 여러개를 지정할 수 있다.
    4. id 선택자 : 한 페이지에서 여러 요소를 공유해서 사용할 수 있는 클래스와 달리 id는 한가지 요소에만 고유하게 사용.
    5. 그룹 선택자 : 여러 요소를 한꺼번에 선택하고 싶을 때 쉼표로 원하는 요소를 이어 적으면 된다.
    -> 클래스랑 다른 이유는 클래스로 지정된 것 이외에도 다 사용이 가능하기 때문이다.
    
    CSS 선택자는 좀 더 구체적으로 작성할 수록, 나중에 작성할수록 우선순위를 가진다. id 선택자 > 클래스 선택자 > 태그 선택자 > 기본 선택자 순서.

결합자 / 가상클래스 :
    복잡한 계층 구조 속에서 특정 조건을 만족하는 요소를 선택하는 결합자 및 가상 클래스를 이용해 CSS를 적용하는 좀 더 복합적인 방식에 대해 배움.
    (pseudoclass.html, pseudoclass.css 참조)

    1) 자손 결합자: class outer 다음에 공백, li를 입력했다. (.outer li{})
        의미: outer 클래스명 요소 내에 있는 모든 li 태그에 olivedrab을 적용하라는 뜻.

        -> 그렇다면 특정한 조건을 걸어서, 몇몇 자식만 변경하고 싶다면? 일촌 자식 결합자 사용.

    2) 동생 결합자: 물결 표시를 통해서 표시한다. 뒤따르는 동생들을 의미한다.
        <ol> 태그 내에 <li class="starter"> 태그가 있는데, 이 클래스명 뒤에 물결표시를 하고 li를 명시하면
        starter 뒤에 딸려있는 같은 레벨의 형제들을 모두 선택한다는 의미.
        pseudoclass.css에서 코드 작성 후에 '다' 뒤에 있는 텍스트로부터 동생 결합자로 지정한 이탤릭체가 적용되어 있음을 확인할 수 있다.

    3) 가상 클래스:
        이상에서 한 부분들은 특정 id/class를 선택하여 스타일을 적용하는 방식.
        가상 클래스는 특정 사오항을 ㅏ정하고 이름을 붙인다는 의미. 작성방법은 태그 뒤에 콜론 삽입.

https://flukeout.github.io/ - CSS 문제 학습하는 곳

글자 스타일
    이상으로 숭버한 부분에서는 선택자 / 결합자 / 가상 클래스를 이용한 개념을 이해했다면,
    이제는 이상의 것들을 활용해서 스타일 속성을 지정하는 방법을 배울 예정이다.
    웹 페이지의 글자와 텍스트 속성을 지정하는 문법 - 속성 종류가 많아서 일부분만 할 에정.

    개발 실무 관련
        웹에서 사용할 서체 설정의 경우 서체 종류를 지정하는 것부터 시작함.
        웹 폰트 개념을 알아야 하는데, 서체 결정을 하는 font-family에 관해서는 추후 자세히 수업하고, 여기서는 따라 작성만 할 에정.
    
    1. 기울임과 굵기
        1) font-style 속성 :
            글자를 기울일 때 font-style 속성을 사용하고, italic / oblique라는 값이 있고 태그로는 <i> / <em> 태그와 관련이 있다.
            차이점 :
                italic - 글자를 기울인 서체로 적용
                oblique - 종이를 비틀어서 각도를 넣어 기울인 것
            이나, 서체에 따라 italic만 있는 경우가 있고 oblique만 있는 경우가 있다.
            이론적으로 큰 차이가 없어서 그런게 있다고만 알아도 무방하다.

        2) font-weight 속성 :
            글자의 굵기를 변경할 때 사용. 서체의 원래 굵기는 normal / 굵게 표현하려면 bold이다.
            <b> / <strong> 태그와 관련이 있다. 서체에 따라 normal / bold 속성이 있는지 없는지도 다르고,
            100~900사이의 가중치를 두고 미세하게 굵기를 조절할 수 있는 등 서체의 특징에 따라 사용해야 한다.
        
            HTML에서 태그로 작성하면 브라우저마다 기본적으로 기울임이나 굵기가 다르게 나오는 경우가 있어 사용자 경험에 차이가 있기 때문에,
            HTML 각 요소에 따라서 CSS를 설정하는 것이 보편적인 개발환경이다. (Chapter 06의 fontstyle.html, fontstyle.css 참조)
    
    2. 글자 크기
        1) font-size 속성: (fontsize.html, fontsize.css 참조)
            픽셀(px) / 포인트(pt) : 절대값
            퍼센트(%) / em / rem : 상대값
            
            여기서 상대값은 부모 요소의 크기에 비례해서 나타난다.
            ex) 부모 안에 자식이 있는 구조에서 자식의 크기가 90%이면 0.9배의 글자 크기를 가지게 된다.
            이 퍼센트를 다시 100으로 나눠 배수 관계로 표현한 것이 em이다.

            em의 경우 부모 자식 구조가 여러 단계로 중첩됐을 때 연쇄적으로 영향을 받는다는 문제점이 있음.
            원하는 만큼 글자 크기를 조절하는 것이 복잡할 수 있다.

            rem의 요소 -> 가장 상위 부모, 가장 바깥쪽에 있는 HTML 요소를 기준으로 크기를 조절하는데,
            중첩된 요소는 모두 동일한 크기가 적용된다.
                ex) 가장 상위요소에 1.2rem을 저용하면, 여러 요소가 중첩돼있어도,
                가장 상위 요소의 1.2배 크기가 하위 중첩된 모든 요소에 동일하게 적용.
                -> 하위 요소를 하나의 크기로 통합할 때 유용하게 사용된다.
            
            서체 크기는 필요에 다라 절대값/상대값으로 표현이 가능하다.
    
    3. 글자 꾸미기
        1) text-decoration 속성 :
            <u> 태그에 해당하는 underline
            <s> 태그에 해당하는 line-through
            윗줄 - overline
        
        2) text-transform 속성 :
            영문 알파벳 대소문자 표시에 사용되는 속성
            2)-1. none - 입력한 그대로
            2)-2. uppercase - 전부 대문자로 바꾸기
            2)-3. lowercase - 전부 소문자로 바꾸기
            2)-4. capitalize - 각 단어의 첫 글자를 대문자로 표기 (처음부터 다 대문자면 적용안됨.)

            * 처음부터 대소문자 구분해서 사용하면 안되나?
                개발 환경상에서 웹 페이지가 나타내는 텍스트는 HTML 문서에서 작성되기보다는 서버에서 들어오는 경우가 많다.
                그 경우 어떤 텍스트를 전달받게 될지 확신할 수 없기 때문에 CSS에서 설정한다.

                (textdecoration.html, textdecoration.css 참조)
