/* 자손 결합자*/
.outer li{
    color: olivedrab;
}
/* 자식 결합자 - 바로 직계로 연결된 태그만 색깔이 바뀌었다.*/
.outer > li {
    color:dodgerblue;
}
/* 자식의 자손을 선택하고 싶은 경우?*/
.outer>li li{
    text-decoration:underline;
}
/* 즉 >과 공백()을 이용하여 특정한 조건을 걸어서 CSS를 적용시킬 수 있다.

CSS 문서에서 .outer li 부분에서 color: olivedrab을 주석처리 하면 .outer > li에 지정한 dodgerblue가 자식 뿐만 아니라
outer 기준 손자까지 적용되는 것을 확인할 수 있는데, 이는 서체 및 텍스트 관련 CSS의 일부 속성들일 그 자식에게까지 자동상속되기 때문이다.

즉, 자식 결합자라도 적용한 속성이 상속되는 속성이라면 이를 덮어쓰는 다른 선택자와 속성을 지정하지 않는 한 그 아래의 자식들도 해당 속성을 상속받는다.
*/

/*뒤따르는 모든 동생 결합자에 적용하기*/
.starter ~li {
    text-decoration: underline;
    font-style: italic;
}
/* 뒤따르는 바로 다음 동생 결합자에만 적용하기*/
.starter+li{
    font-weight: bold;
}

/* 첫번째, 마지막 요소 가상 클래스 */
ol li:first-child, ol li:last-child{
    color: brown;
}
/*
ol 내의 li태그의 첫 번째 요소(first-child)와, li 태그의 마지막 요소(last-child)를 지정하여,
특정 태그에 속성을 기입하지 않고도 CSS를 적용시킬 수 있다.

응용 버전
*/
/* ~의 요소가 아닌 가상 클래스 */
.outer >li:not(:last-child){
    text-decoration: line-through;
}

ul:not(.outer) li{
    font-weight: bold;
}
/*
1번 해석 - outer 클래스의 직계자식인 li 태그중 마지막 요소가 아닌 것을 골라 취소선을 적용한다.

2번 해석 - ul 태그 중에 outer 클래스가 아닌 것을 골라서 그 안에 있는 li태그에만 볼드체 적용.
    그 결과 과일 항목 아래에 있는 ul 태그는 outer 클래스가 아니기 때문에 사과/포도/딸기/키위에만 볼드체가 적용된다.
*/
/* N번째 요소 가상 클래스 */
ol li:nth-child(3){
    font-weight:bold;
    color:deeppink;
}
ol li:nth-child(4n){
    font-weight:bold;
    color:springgreen;
}

ol li:nth-child(4n-2){
    font-weight:bold;
    color:darkturquoise;
}

ol li:nth-child(odd){
    font-weight:bold;
    color:orangered;
}
/*
    이상의 코드들에서 주의할 점:
        n-th child()의 소괄호 내에 들어갈 수 있는 사례:
        1) 특정 숫자 #
        2) #n - n번째 마다
        3) #n+@ - n번째마다 +@의 값에
        4) odd, even
    
        뒷부분에 작성된 것이 우선 적용되기 때문에 이것도 참조하기.
        마우스오버(:hover) 예제
*/
li:hover{
    font-weight: bold;
    color:red;
}
/*
hover - 떠다니다라는 뜻으로, 마우스를 특정 요소 위에 올려뒀을 때 적용된다.
단, 구체적으로 명시한 요소들은 우선순위가 높기 때문에 적용이 안되는 경우도 있다.
*/